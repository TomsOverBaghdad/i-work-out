{"version":3,"sources":["components/WorkoutIcon.js","components/WorkoutCalendar.js","components/WorkoutTotals.js","colors.js","App.js","testData.js","serviceWorker.js","index.js"],"names":["WorkoutIcon","props","disabledClass","disabled","inverse","className","color","icon","size","WorkoutCalendar","month","moment","disableDate","date","getMonth","Fragment","dateCellRender","workout","workouts","find","w","dateMoment","format","matchDateToMoment","style","height","justify","align","Column","Table","Text","Typography","renderWorkoutColumn","total","WorkoutTotal","workoutTotalProps","rowKey","name","width","dataSource","pagination","title","render","WorkoutTotals","workoutTotals","forEach","workoutTotalsValues","Object","values","reduce","acc","curr","i","t","strong","map","workoutTotal","key","ColorPallete","library","add","faDumbbell","faRunning","faPeopleCarry","Header","Layout","Content","testWorkouts","day","set","r","Math","floor","random","keys","push","toDate","ceil","generateTestWorkouts","App","minHeight","theme","mode","defaultSelectedKeys","Item","padding","type","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sXAcaA,G,OAAc,SAACC,GAC3B,IAAMC,EAAgBD,EAAME,SAAW,WAAa,GACnD,OACC,kBAAC,IAAD,CACCC,SAAS,EACTC,UAAS,uBAAkBJ,EAAMK,MAAxB,YAAiCJ,GAC1CK,KAAMN,EAAMM,KACZC,KAAMP,EAAMO,MAAQ,SCLjB,IAAMC,EAAkB,SAACR,GAC9B,IAAMS,EAAQC,MAASD,QACjBE,EAAc,SAACC,GAAD,OAAgBA,EAAKC,aAAeJ,GAqBxD,OACE,kBAAC,IAAMK,SAAP,KACE,kBAAC,IAAD,CAAUC,eArBS,SAACH,GACtB,IAAMI,EAAUhB,EAAMiB,SAASC,MAAK,SAAAC,GAAC,OATzC,SAA2BP,EAAYQ,GACrC,OAAOV,IAAOE,GAAMS,OAAO,gBAAkBD,EAAWC,OAAO,cAQpBC,CAAkBH,EAAEP,KAAMA,MACnE,GAAKI,EAGL,OACE,kBAAC,IAAD,CAAKO,MAAO,CAACC,OAAQ,WAAYC,QAAQ,MAAMC,MAAM,UACnD,kBAAC,IAAD,KACE,kBAAC,EAAD,CACExB,SAAUS,EAAYK,EAAQJ,MAC9BP,MAAOW,EAAQX,MACfC,KAAMU,EAAQV,KACdC,KAAK,c,kBCzBToB,EAAWC,IAAXD,OACAE,EAASC,IAATD,KAYFE,EAAsB,SAAC,GAAD,IAAEf,EAAF,EAAEA,QAASgB,EAAX,EAAWA,MAAX,OAC1B,kBAAC,IAAD,KACE,kBAAC,EAAD,CACE3B,MAAOW,EAAQX,MACfC,KAAMU,EAAQV,KACdC,KAAK,OAEP,kBAACsB,EAAD,KAAOG,KAILC,EAAe,SAACC,GAAD,OACnB,kBAAC,IAAD,CAAOC,OAAQ,SAAAhB,GAAC,OAAIA,EAAEH,QAAQoB,MAAMb,MAAO,CAACc,MAAO,SAAUC,WAAY,CAACJ,GAAoBK,YAAY,GACxG,kBAACZ,EAAD,CAAQa,MAAON,EAAkBlB,QAAQoB,KAAMK,OAAQV,MAI9CW,EAAgB,SAAC1C,GAC5B,IAAM2C,EAAgB,GACtB3C,EAAMiB,SAAS2B,SAAQ,SAAC5B,GACjB2B,EAAc3B,EAAQoB,QACzBO,EAAc3B,EAAQoB,MAAQ,CAC5BpB,UACAgB,MAAO,IAGXW,EAAc3B,EAAQoB,MAAMJ,OAAS,KAEvC,IAAMa,EAAsBC,OAAOC,OAAOJ,GACpCX,EAAQa,EAAoBG,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAKlB,QAAO,GAE1E,OACE,kBAAC,IAAMlB,SAAP,KACE,kBAAC,IAAD,CAAOqB,OAAQ,SAAAgB,GAAC,OAAIA,GAAG5B,MAAO,CAACc,MAAO,SAAUC,WAAY,CAACN,GAAQO,YAAY,GAC/E,kBAACZ,EAAD,CAAQa,MAAM,QAAQC,OAAQ,SAACW,GAAD,OAAO,kBAACvB,EAAD,CAAMwB,QAAM,GAAED,OAEpDP,EAAoBS,KAAI,SAACC,EAAcJ,GAAf,OACvB,kBAAC,IAAMrC,SAAP,CAAgB0C,IAAG,wBAAmBL,IACpC,kBAAC,EAAiBI,SCrDfE,G,OAAe,CAC3B,MAAS,UACT,KAAO,UACP,OAAU,UACV,IAAO,UACP,YAAY,YCUbC,IAAQC,IAAIC,IAAYC,IAAWC,K,IAG3BC,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAGVC,ECvB8B,WAIlC,IAHA,IAAMjD,EAAW,GAEbkD,EAAM,EACHA,GAAO,IAAI,CAChB,IAAMvD,EAAOF,MACbE,EAAKwD,IAAI,QAJG,GAKZxD,EAAKwD,IAAI,OAAQD,GACjB,IAAME,EAAIC,KAAKC,MAAsB,EAAhBD,KAAKE,UACpBnE,EAAQyC,OAAO2B,KAAKhB,GAAcY,GAClC/D,EAAO,CAAC,UAAW,WAAY,gBAAgB+D,EAAI,GACnDjC,EAAO,CAAC,MAAO,iBAAkB,oBAAoBiC,EAAI,GAC/DpD,EAASyD,KAAK,CACZrE,QACA+B,OACA9B,OACAM,KAAMA,EAAK+D,WAEbR,GAAOG,KAAKM,KAAqB,EAAhBN,KAAKE,UAGxB,OAAOvD,EDEY4D,GA6BNC,EA1BH,kBACV,kBAAC,IAAMhE,SAAP,KACE,kBAAC,IAAD,CAAQS,MAAO,CAAEwD,UAAW,UAC1B,kBAAChB,EAAD,CAAQ3D,UAAU,UAChB,yBAAKA,UAAU,SACf,kBAAC,IAAD,CAAM4E,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,aACzD,kBAAC,IAAKC,KAAN,CAAW3B,IAAI,YAAf,YACA,kBAAC,IAAK2B,KAAN,CAAW3B,IAAI,YAAf,YACA,kBAAC,IAAK2B,KAAN,CAAW3B,IAAI,iBAAf,mBAGJ,kBAACS,EAAD,CAAS1C,MAAO,CAAE6D,QAAS,SACzB,kBAAC,IAAD,CAAQhF,UAAU,yBAAyBmB,MAAO,CAAE6D,QAAS,WAC3D,kBAACnB,EAAD,CAAS1C,MAAO,CAAE6D,QAAS,SAAUL,UAAW,MAC9C,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAiB9D,SAAUiD,IAC3B,kBAAC,IAAD,CAASmB,KAAK,WAAWjF,UAAU,6BACnC,kBAAC,EAAD,CAAea,SAAUiD,WElCnBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlD,OAEL,kBAAC,EAAD,MAGFmD,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.925bdb07.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport './WorkoutIcon.less';\n\nimport type { FaIcon } from './types';\n\ntype Props = {|\n\tcolor: string,\n\tdisabled: bool,\n\ticon: FaIcon,\n\tsize: string,\n|};\n\nexport const WorkoutIcon = (props: Props) => {\n\tconst disabledClass = props.disabled ? 'disabled' : '';\n  return (\n  \t<FontAwesomeIcon\n  \t\tinverse={true}\n\t  \tclassName={`workout-icon ${props.color} ${disabledClass}`}\n\t  \ticon={props.icon}\n\t  \tsize={props.size || '3x'}\n\t  />\n\t);\n};\n","import React from 'react';\nimport moment from \"moment\";\nimport { Calendar, Row, Col } from 'antd';\n\nimport { WorkoutIcon } from './WorkoutIcon';\n\nimport type { Moment, Workout } from './types';\n\ntype Props = {|\n  workouts: Array<Workout>\n|};\n\nfunction matchDateToMoment(date: Date, dateMoment: Moment) {\n  return moment(date).format('MM/DD/YYYY') === dateMoment.format('MM/DD/YYYY');\n}\n\nexport const WorkoutCalendar = (props: Props) => {\n  const month = moment().month();\n  const disableDate = (date: Date) => date.getMonth() !== month;\n\n  const dateCellRender = (date: Moment) => {\n    const workout = props.workouts.find(w => matchDateToMoment(w.date, date));\n    if (!workout) {\n      return;\n    }\n    return (\n      <Row style={{height: \"inherit\"}} justify=\"end\" align=\"bottom\">\n        <Col>\n          <WorkoutIcon\n            disabled={disableDate(workout.date)}\n            color={workout.color}\n            icon={workout.icon}\n            size=\"3x\"\n          />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Calendar dateCellRender={dateCellRender}/>\n    </React.Fragment>\n  );\n};\n","import React from 'react';\nimport { Table, Typography, Space } from 'antd';\n\nimport { WorkoutIcon } from './WorkoutIcon';\n\nimport type { Workout } from './types'\n\nconst { Column } = Table;\nconst { Text } = Typography;\n\ntype Props = {|\n  workouts: Array<Workout>\n|};\n\ntype WorkoutTotalProps = {|\n  workout: Workout,\n  total: number,\n|};\n\n\nconst renderWorkoutColumn = ({workout, total}: WorkoutTotalProps) => (\n  <Space>\n    <WorkoutIcon\n      color={workout.color}\n      icon={workout.icon}\n      size=\"2x\"\n    />\n    <Text>{total}</Text>\n  </Space>\n);\n\nconst WorkoutTotal = (workoutTotalProps: WorkoutTotalProps) => (\n  <Table rowKey={w => w.workout.name} style={{width: '200px'}} dataSource={[workoutTotalProps]} pagination={false}>\n    <Column title={workoutTotalProps.workout.name} render={renderWorkoutColumn} />\n  </Table>\n);\n\nexport const WorkoutTotals = (props: Props) => {\n  const workoutTotals = {};\n  props.workouts.forEach((workout) => {\n    if (!workoutTotals[workout.name]) {\n      workoutTotals[workout.name] = {\n        workout,\n        total: 0\n      };\n    }\n    workoutTotals[workout.name].total += 1;\n  })\n  const workoutTotalsValues = Object.values(workoutTotals);\n  const total = workoutTotalsValues.reduce((acc, curr) => acc + curr.total, 0);\n\n  return (\n    <React.Fragment>\n      <Table rowKey={i => i} style={{width: '200px'}} dataSource={[total]} pagination={false}>\n        <Column title=\"Total\" render={(t) => <Text strong>{t}</Text>} />\n      </Table>\n      {workoutTotalsValues.map((workoutTotal, i) => (\n        <React.Fragment key={`workout-total-${i}`}>\n          <WorkoutTotal {...workoutTotal} />\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  );\n};\n","export const ColorDefaultOverride = {\n\t'@primary-color': '#1DA57A', // green alternate\n\t'@layout-header-background':'#001529', //not an override just here to see it\n};\n\nexport const ColorPallete = {\n\t'green': '#1DA57A', // green alternate\n\t'blue':'#1890ff', //original blue from ant\n\t'orange': '#D58309', //orangey\n\t'red': '#D54E09', // redy\n\t'dark-blue':'#001529', //dark blue\n}\n","import React from 'react';\n\nimport { Layout, Menu, Divider, Space } from 'antd';\n\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faDumbbell, faRunning, faPeopleCarry } from '@fortawesome/free-solid-svg-icons';\n\nimport { WorkoutCalendar } from './components/WorkoutCalendar';\nimport { WorkoutTotals } from './components/WorkoutTotals';\n\nimport './App.less';\n\n// TEST IMPORTS\nimport { generateTestWorkouts } from './testData';\n//\n\n\n// add to library to use as strings instead of objects\n// remove 'fa' and hyphenate instead of camel case\n// <FontAwesomeIcon icon='dumbbell' />\nlibrary.add(faDumbbell, faRunning, faPeopleCarry);\n\n\nconst { Header, Content } = Layout;\n\n// TEST DATA\nconst testWorkouts = generateTestWorkouts();\n//\n\nconst App = () => (\n  <React.Fragment>\n    <Layout style={{ minHeight: '100vh' }}>\n      <Header className=\"header\">\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['Calendar']}>\n          <Menu.Item key=\"Calendar\">Calendar</Menu.Item>\n          <Menu.Item key=\"Workouts\">Workouts</Menu.Item>\n          <Menu.Item key=\"Start Workout\">Start Workout</Menu.Item>\n        </Menu>\n      </Header>\n      <Content style={{ padding: '50px' }}>\n        <Layout className=\"site-layout-background\" style={{ padding: '24px 0' }}>\n          <Content style={{ padding: '0 24px', minHeight: 280 }}>\n            <Space>\n              <WorkoutCalendar workouts={testWorkouts} />\n              <Divider type=\"vertical\" className=\"workout-calendar-divider\" />\n              <WorkoutTotals workouts={testWorkouts} />\n            </Space>\n          </Content>\n        </Layout>\n      </Content>\n    </Layout>\n  </React.Fragment>\n);\n\nexport default App;\n","import moment from \"moment\";\nimport { ColorPallete } from './colors';\n\nexport const generateTestWorkouts = () => {\n  const workouts = [];\n  const month = 5;\n  let day = 1;\n  while (day <= 31) {\n    const date = moment();\n    date.set('month', month);\n    date.set('date', day);\n    const r = Math.floor(Math.random() * 5);\n    const color = Object.keys(ColorPallete)[r];\n    const icon = ['running', 'dumbbell', 'people-carry'][r % 3];\n    const name = ['Run', 'Chest and Back', 'Shoulders & Arms'][r % 3];\n    workouts.push({\n      color,\n      name,\n      icon,\n      date: date.toDate(),\n    });\n    day += Math.ceil(Math.random() * 2);\n  }\n\n  return workouts;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}